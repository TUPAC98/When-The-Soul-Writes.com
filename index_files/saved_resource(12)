!function(){var e={706:function(e){function t(){return e.exports=t=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},e.exports.default=e.exports,e.exports.__esModule=!0,t.apply(this,arguments)}e.exports=t,e.exports.default=e.exports,e.exports.__esModule=!0},6684:function(e,t){var n;
/*!
  Copyright (c) 2018 Jed Watson.
  Licensed under the MIT License (MIT), see
  http://jedwatson.github.io/classnames
*/!function(){"use strict";var r={}.hasOwnProperty;function l(){for(var e=[],t=0;t<arguments.length;t++){var n=arguments[t];if(n){var s=typeof n;if("string"===s||"number"===s)e.push(n);else if(Array.isArray(n)){if(n.length){var a=l.apply(null,n);a&&e.push(a)}}else if("object"===s)if(n.toString===Object.prototype.toString)for(var i in n)r.call(n,i)&&n[i]&&e.push(i);else e.push(n.toString())}}return e.join(" ")}e.exports?(l.default=l,e.exports=l):void 0===(n=function(){return l}.apply(t,[]))||(e.exports=n)}()},9976:function(e){"use strict";function t(e,n){var r;if(Array.isArray(n))for(r=0;r<n.length;r++)t(e,n[r]);else for(r in n)e[r]=(e[r]||[]).concat(n[r])}e.exports=function(e){var n,r={};return t(r,e),(n=function(e){return function(t){return function(n){var l,s,a=r[n.type],i=t(n);if(a)for(l=0;l<a.length;l++)(s=a[l](n,e))&&e.dispatch(s);return i}}}).effects=r,n}},9908:function(e,t,n){"object"==typeof window&&window.Jetpack_Block_Assets_Base_Url&&window.Jetpack_Block_Assets_Base_Url.url&&(n.p=window.Jetpack_Block_Assets_Base_Url.url)},1671:function(e,t,n){"use strict";var r=Object.assign||function(e){for(var t,n=1;n<arguments.length;n++)for(var r in t=arguments[n])Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r]);return e};Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){var t=e.size,n=void 0===t?24:t,l=e.onClick,s=(e.icon,e.className),i=function(e,t){var n={};for(var r in e)0<=t.indexOf(r)||Object.prototype.hasOwnProperty.call(e,r)&&(n[r]=e[r]);return n}(e,["size","onClick","icon","className"]),o=["gridicon","gridicons-fullscreen",s,!1,!1,!1].filter(Boolean).join(" ");return a.default.createElement("svg",r({className:o,height:n,width:n,onClick:l},i,{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24"}),a.default.createElement("g",null,a.default.createElement("path",{d:"M21 3v6h-2V6.41l-3.29 3.3-1.42-1.42L17.59 5H15V3zM3 3v6h2V6.41l3.29 3.3 1.42-1.42L6.41 5H9V3zm18 18v-6h-2v2.59l-3.29-3.29-1.41 1.41L17.59 19H15v2zM9 21v-2H6.41l3.29-3.29-1.41-1.42L5 17.59V15H3v6z"})))};var l,s=n(6141),a=(l=s)&&l.__esModule?l:{default:l};e.exports=t.default},6141:function(e){"use strict";e.exports=window.React}},t={};function n(r){var l=t[r];if(void 0!==l)return l.exports;var s=t[r]={exports:{}};return e[r](s,s.exports,n),s.exports}n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,{a:t}),t},n.d=function(e,t){for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},function(){var e;n.g.importScripts&&(e=n.g.location+"");var t=n.g.document;if(!e&&t&&(t.currentScript&&(e=t.currentScript.src),!e)){var r=t.getElementsByTagName("script");r.length&&(e=r[r.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),n.p=e+"../"}();var r={};!function(){"use strict";n(9908)}(),function(){"use strict";n.r(r);var e={};n.r(e),n.d(e,{init:function(){return S},resetCurrentSlideProgress:function(){return g},setBuffering:function(){return v},setCurrentSlideEnded:function(){return E},setCurrentSlideProgress:function(){return y},setEnded:function(){return w},setFullscreen:function(){return h},setMuted:function(){return d},setPlaying:function(){return p},showSlide:function(){return m},slideReady:function(){return f}});var t={};n.r(t),n.d(t,{getCurrentMediaDuration:function(){return I},getCurrentMediaElement:function(){return R},getCurrentSlideIndex:function(){return k},getCurrentSlideProgress:function(){return N},getCurrentSlideProgressPercentage:function(){return C},getPreviousSlideMediaElement:function(){return L},getSettings:function(){return F},getSlideCount:function(){return D},hasCurrentSlideEnded:function(){return T},hasEnded:function(){return z},isBuffering:function(){return _},isCurrentSlideReady:function(){return M},isFullscreen:function(){return O},isMuted:function(){return P},isPlayerReady:function(){return b},isPlaying:function(){return x}});var l=n(706),s=n.n(l),a=window.wp.element,i=window.wp.domReady,o=n.n(i),c=window.wp.data,u=window.wp.keycodes;function d(e,t){return{type:"SET_MUTED",value:t,playerId:e}}function p(e,t){return{type:"SET_PLAYING",value:t,playerId:e}}function m(e,t){return{type:"SHOW_SLIDE",index:t,playerId:e}}function f(e,t,n){return{type:"SLIDE_READY",mediaElement:t,duration:n,playerId:e}}function y(e,t){return{type:"SET_CURRENT_SLIDE_PROGRESS",value:t,playerId:e}}function g(e){return{type:"RESET_CURRENT_SLIDE_PROGRESS",playerId:e}}function E(e){return{type:"SET_CURRENT_SLIDE_ENDED",playerId:e}}function h(e,t){return{type:"SET_FULLSCREEN",playerId:e,fullscreen:t}}function w(e){return{type:"ENDED",playerId:e}}function S(e,t={}){return{type:"INIT",playerId:e,settings:t}}function v(e,t){return{type:"SET_BUFFERING",value:t,playerId:e}}function b(e,t){return!!e[t]}function k(e,t){return e[t].currentSlide.index}function N(e,t){return e[t].currentSlide.progress}function C(e,t){const n=e[t].currentSlide.progress.currentTime,r=e[t].currentSlide.progress.duration,l=Math.round(100*n/r);return l>=100?100:l}function x(e,t){return e[t].playing}function P(e,t){return e[t].muted}function _(e,t){return e[t].buffering}function R(e,t){return e[t].currentSlide.mediaElement}function I(e,t){return e[t].currentSlide.duration}function T(e,t){return e[t].currentSlide.ended}function M(e,t){return e[t].currentSlide.ready}function L(e,t){var n;return null===(n=e[t].previousSlide)||void 0===n?void 0:n.mediaElement}function O(e,t){return e[t].fullscreen}function z(e,t){return e[t].ended}function F(e,t){return e[t].settings}function D(e,t){return e[t].settings.slideCount}var A=n(9976),j=n.n(A),U=window.lodash;const B=e=>e&&e.src&&"video"===e.tagName.toLowerCase();function H(e,t){const{getState:n}=t,r=e.playerId,l=P(n(),r),s=x(n(),r),a=R(n(),r),i=L(n(),r),o=F(n(),r);B(i)&&(i.currentTime=0,i.onwaiting=null,i.onplaying=null,i.pause()),B(a)&&(l!==a.muted&&(a.muted=l,l||(a.volume=o.volume)),s?a.play():a.pause())}function q(e,t){const{getState:n,dispatch:r}=t,l=e.playerId,s=M(n(),l),a=x(n(),l),i=N(n(),l);if(clearTimeout(i.timeout),!a||!s)return void(i.lastUpdate&&r(y(l,{...i,lastUpdate:null})));const o=R(n(),l),c=I(n(),l),u=i.lastUpdate?Date.now()-i.lastUpdate:100,d=B(o)?o.currentTime:i.currentTime+u/1e3;if(d>=c){r(E(l));const e=D(n(),l);k(n(),l)===e-1&&r(w(l))}else r(y(l,{timeout:setTimeout((()=>q(e,t)),100),lastUpdate:Date.now(),duration:c,currentTime:d}))}var G={SET_PLAYING:[q,H],SLIDE_READY:[function(e,t){const{getState:n,dispatch:r}=t,l=e.playerId,s=R(n(),l);if(!B(s))return;const a=N(n(),l);0===s.currentTime&&a.currentTime>0&&(s.currentTime=a.currentTime),s.onwaiting=()=>r(v(l,!0)),s.onplaying=()=>r(v(l,!1))},q,H],SET_MUTED:H,SHOW_SLIDE:H};const $={currentTime:0,duration:null,timeout:null,lastUpdate:null},V={progress:$,index:0,mediaElement:null,duration:null,ended:!1,ready:!1},W={slideCount:0,currentSlide:V,previousSlide:null,muted:!1,playing:!1,ended:!1,buffering:!1,fullscreen:!1,settings:{imageTime:5,startMuted:!1,playInFullscreen:!0,playOnNextSlide:!0,playOnLoad:!1,exitFullscreenOnEnd:!0,loadInFullscreen:!1,blurredBackground:!0,showSlideCount:!1,showProgressBar:!0,shadowDOM:{enabled:!0,mode:"open",globalStyleElements:'#jetpack-block-story-css, link[href*="jetpack/_inc/blocks/story/view.css"]'},defaultAspectRatio:.5625,cropUpTo:.2,volume:.8,maxBullets:7,maxBulletsFullscreen:14}};function K(e=W,t){switch(t.type){case"SHOW_SLIDE":{const n=e.currentSlide===t.index+1;return{...e,currentSlide:{...V,index:t.index},previousSlide:e.currentSlide,playing:n?e.settings.playOnNextSlide:e.playing}}case"SLIDE_READY":return{...e,buffering:!1,currentSlide:{...e.currentSlide,mediaElement:t.mediaElement,duration:t.duration,ready:!0},previousSlide:null};case"SET_CURRENT_SLIDE_PROGRESS":return{...e,currentSlide:{...e.currentSlide,progress:t.value}};case"SET_CURRENT_SLIDE_ENDED":return{...e,currentSlide:{...e.currentSlide,ended:!0}};case"RESET_CURRENT_SLIDE_PROGRESS":return{...e,currentSlide:{...e.currentSlide,progress:{...$}}};case"SET_MUTED":return{...e,muted:t.value};case"SET_PLAYING":{const n=t.value&&e.ended;return{...e,playing:t.value,buffering:!!t.value&&e.buffering,fullscreen:!e.playing&&t.value?e.settings.playInFullscreen:e.fullscreen,ended:!n&&e.ended,currentSlide:n?{...V,index:0}:e.currentSlide,previousSlide:n?null:e.previousSlide}}case"SET_BUFFERING":return{...e,buffering:t.value};case"SET_FULLSCREEN":return{...e,fullscreen:t.fullscreen,playing:!(e.fullscreen&&!t.fullscreen&&e.settings.playInFullscreen)&&e.playing};case"INIT":{const n=(0,U.merge)({},e.settings,t.settings);return{...e,settings:n,playing:n.playOnLoad,fullscreen:n.loadInFullscreen}}case"ENDED":return{...e,currentSlide:{...V,index:e.settings.slideCount-1,progress:{...$,currentTime:100,duration:100}},ended:!0,playing:!1,fullscreen:!e.settings.exitFullscreenOnEnd}}return e}const Y=(0,c.registerStore)("jetpack/story/player",{actions:e,reducer:function(e={},t){return t.playerId?{...e,[t.playerId]:K(e[t.playerId],t)}:e},selectors:t});!function(e){const t=[j()(G)];let n=()=>{throw new Error("Dispatching while constructing your middleware is not allowed. Other middleware would not be applied to this dispatch.")},r=[];const l={getState:e.getState,dispatch:(...e)=>n(...e)};r=t.map((e=>e(l))),n=(0,U.flowRight)(...r)(e.dispatch),e.dispatch=n}(Y);var J=n(6684),Q=n.n(J),X=window.wp.blob,Z=window.wp.compose,ee=window.wp.i18n;var te=window.wp.components;const __=ee.__;function ne({isEllipsis:e,disabled:t,index:n,isSelected:r,progress:l,onClick:s}){const i=t||e;let o=null;return e||(o=r?(0,ee.sprintf)(__("Slide %d, currently selected","jetpack"),n+1):(0,ee.sprintf)(__("Go to slide %d","jetpack"),n+1)),(0,a.createElement)(te.Button,{role:i?"presentation":"tab",key:n,className:Q()("wp-story-pagination-bullet",{"wp-story-pagination-ellipsis":e}),"aria-label":o,"aria-disabled":i||r,onClick:i||r?void 0:s,disabled:i},(0,a.createElement)("div",{className:"wp-story-pagination-bullet-bar"},(0,a.createElement)("div",{className:"wp-story-pagination-bullet-bar-progress",style:{width:`${l}%`}})))}const re=({className:e,size:t,label:n,isPressed:r,...l})=>(0,a.createElement)("button",s()({type:"button","aria-label":n,"aria-pressed":r,className:Q()("jetpack-mdc-icon-button","circle-icon","outlined","bordered",e),style:{width:`${t}px`,height:`${t}px`}},l)),le=({className:e,size:t=24,label:n,isPressed:r,...l})=>(0,a.createElement)("button",s()({type:"button","aria-label":n,"aria-pressed":r,className:Q()("jetpack-mdc-icon-button",e),style:{width:`${t}px`,height:`${t}px`}},l));var se=(e,t=24,n=24,r="0 0 24 24")=>(0,a.createElement)(te.SVG,{xmlns:"http://www.w3.org/2000/svg",width:t,height:n,viewBox:r},(0,a.createElement)(te.Path,{fill:"none",d:"M0 0h24v24H0V0z"}),e);const ae=({children:e,size:t})=>se(e,t,t),ie=({size:e})=>(0,a.createElement)(ae,{size:e},(0,a.createElement)(te.Path,{d:"M8 5v14l11-7z"})),oe=({size:e})=>(0,a.createElement)(ae,{size:e},(0,a.createElement)(te.Path,{d:"M6 19h4V5H6v14zm8-14v14h4V5h-4z"})),ce=({size:e})=>(0,a.createElement)(ae,{size:e},(0,a.createElement)(te.Path,{d:"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"})),ue=({size:e})=>(0,a.createElement)(ae,{size:e},(0,a.createElement)(te.Path,{d:"M3 9v6h4l5 5V4L7 9H3zm13.5 3c0-1.77-1.02-3.29-2.5-4.03v8.05c1.48-.73 2.5-2.25 2.5-4.02zM14 3.23v2.06c2.89.86 5 3.54 5 6.71s-2.11 5.85-5 6.71v2.06c4.01-.91 7-4.49 7-8.77s-2.99-7.86-7-8.77z"})),de=({size:e})=>(0,a.createElement)(ae,{size:e},(0,a.createElement)(te.Path,{d:"M16.5 12c0-1.77-1.02-3.29-2.5-4.03v2.21l2.45 2.45c.03-.2.05-.41.05-.63zm2.5 0c0 .94-.2 1.82-.54 2.64l1.51 1.51C20.63 14.91 21 13.5 21 12c0-4.28-2.99-7.86-7-8.77v2.06c2.89.86 5 3.54 5 6.71zM4.27 3L3 4.27 7.73 9H3v6h4l5 5v-6.73l4.25 4.25c-.67.52-1.42.93-2.25 1.18v2.06c1.38-.31 2.63-.95 3.69-1.81L19.73 21 21 19.73l-9-9L4.27 3zM12 4L9.91 6.09 12 8.18V4z"})),pe=({size:e})=>(0,a.createElement)(ae,{size:e},(0,a.createElement)(te.Path,{d:"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z"})),me=({size:e})=>(0,a.createElement)(ae,{size:e},(0,a.createElement)(te.Path,{d:"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z"})),fe=ee.__;function ye({playing:e,muted:t,onPlayPressed:n,onMutePressed:r,showMute:l}){return(0,a.createElement)("div",{className:"wp-story-controls"},(0,a.createElement)(le,{isPressed:e,label:fe(e?"pause":"play","jetpack"),onClick:n},e?(0,a.createElement)(oe,null):(0,a.createElement)(ie,null)),l&&(0,a.createElement)(le,{isPressed:t,label:fe(t?"unmute":"mute","jetpack"),onClick:r},t?(0,a.createElement)(de,null):(0,a.createElement)(ue,null)))}const ge=ee.__;function Ee({fullscreen:e,onExitFullscreen:t,siteIconUrl:n,storyTitle:r}){return e?(0,a.createElement)("div",{className:"wp-story-meta"},(0,a.createElement)("div",{className:"wp-story-icon"},(0,a.createElement)("img",{alt:ge("Site icon","jetpack"),src:n,width:"40",height:"40"})),(0,a.createElement)("div",null,(0,a.createElement)("div",{className:"wp-story-title"},r)),(0,a.createElement)(le,{className:"wp-story-exit-fullscreen",label:ge("Exit Fullscreen","jetpack"),onClick:t},(0,a.createElement)(ce,null))):null}var he=n(1671),we=n.n(he);const Se=ee.__;function ve({ended:e,hasPrevious:t,onNextSlide:n,onPreviousSlide:r,icon:l,slideCount:s,showSlideCount:i}){const o=(0,a.useCallback)((t=>{e||(t.stopPropagation(),r())}),[r,e]),c=(0,a.useCallback)((t=>{e||(t.stopPropagation(),n())}),[n,e]);return(0,a.createElement)("div",{className:"wp-story-overlay"},i&&(0,a.createElement)("div",{className:"wp-story-embed-icon"},l,(0,a.createElement)("span",null,s)),!i&&(0,a.createElement)("div",{className:"wp-story-embed-icon-expand"},(0,a.createElement)(we(),{role:"img"})),t&&(0,a.createElement)("div",{className:"wp-story-prev-slide",onClick:o},(0,a.createElement)(re,{size:44,label:Se("Previous Slide","jetpack"),className:"outlined-w"},(0,ee.isRTL)()?(0,a.createElement)(me,{size:24}):(0,a.createElement)(pe,{size:24}))),(0,a.createElement)("div",{className:"wp-story-next-slide",onClick:c},(0,a.createElement)(re,{size:44,label:Se("Next Slide","jetpack"),className:"outlined-w"},(0,ee.isRTL)()?(0,a.createElement)(pe,{size:24}):(0,a.createElement)(me,{size:24}))))}function be({currentMedia:e}){const t=e&&"image"===e.type?e.url:null;return(0,a.createElement)("div",{className:"wp-story-background"},(0,a.createElement)("div",{className:"wp-story-background-image",style:{backgroundImage:t?`url("${t}")`:"none"}}),(0,a.createElement)("div",{className:"wp-story-background-blur"}),(0,a.createElement)(te.SVG,{version:"1.1",xmlns:"http://www.w3.org/2000/svg",width:"0",height:"0"},(0,a.createElement)("filter",{id:"gaussian-blur-18"},(0,a.createElement)("feGaussianBlur",{stdDeviation:"18"}))))}var ke=()=>(0,a.createElement)("div",{className:"wp-story-loading-spinner"},(0,a.createElement)("div",{className:"wp-story-loading-spinner__outer"},(0,a.createElement)("div",{className:"wp-story-loading-spinner__inner"})));const Ne=({title:e,alt:t,className:n,id:r,mediaRef:l,mime:s,sizes:i,srcset:o,url:c})=>(0,a.createElement)("img",{ref:l,"data-id":r,"data-mime":s,title:e,alt:t,src:c,className:Q()("wp-story-image",`wp-image-${r}`,n),srcSet:o,sizes:i}),Ce=({title:e,className:t,id:n,mediaRef:r,mime:l,url:s,poster:i})=>(0,a.createElement)("video",{className:Q()("wp-story-video","intrinsic-ignore",`wp-video-${n}`,t),ref:r,"data-id":n,title:e,type:l,src:s,poster:i,tabIndex:-1,preload:"auto",playsInline:!0}),xe=({targetAspectRatio:e,cropUpTo:t,type:n,width:r,height:l,...i})=>{let o=null;if(r&&l){const n=r/l;if(n>=e){n>e/(1-t)||(o="wp-story-crop-wide")}else{n<e*(1-t)||(o="wp-story-crop-narrow")}}const c="video"===n||(i.mime||"").startsWith("video/");return(0,a.createElement)("figure",null,c?(0,a.createElement)(Ce,s()({},i,{className:o})):(0,a.createElement)(Ne,s()({},i,{className:o})))};var Pe=({playerId:e,media:t,index:n,playing:r,uploading:l,settings:i,targetAspectRatio:o})=>{const{currentSlideIndex:u,buffering:d}=(0,c.useSelect)((t=>({currentSlideIndex:t("jetpack/story/player").getCurrentSlideIndex(e),buffering:t("jetpack/story/player").isBuffering(e)})),[]),{slideReady:p}=(0,c.useDispatch)("jetpack/story/player"),m=n===u,f=(0,a.useRef)(null),[y,g]=(0,a.useState)(!1),[E,h]=(0,a.useState)(!0);return(0,a.useEffect)((()=>{if(m&&!E){const t=f.current&&f.current.src&&"video"===f.current.tagName.toLowerCase()?f.current:null;p(e,f.current,t?t.duration:i.imageTime)}}),[m,E]),(0,a.useEffect)((()=>{n<=u+(r?1:0)&&g(!0)}),[r,u]),(0,a.useLayoutEffect)((()=>{f.current&&async function(e){const t=e.tagName.toLowerCase();if("img"===t){if(e.complete)return;await new Promise((t=>{e.addEventListener("load",t,{once:!0})}))}else if("video"===t||"audio"===t){if(e.HAVE_ENOUGH_DATA===e.readyState)return;await new Promise((t=>{e.addEventListener("canplaythrough",t,{once:!0}),e.addEventListener("load",t,{once:!0}),e.HAVE_NOTHING===e.readyState&&e.networkState!==e.NETWORK_LOADING&&e.load()}))}}(f.current).then((()=>{h(!1)}))}),[y,l]),(0,a.createElement)(a.Fragment,null,m&&(E||l||d)&&(0,a.createElement)("div",{className:Q()("wp-story-slide","is-loading",{transparent:r&&d,"semi-transparent":l||!r&&d})},(0,a.createElement)(ke,null)),(0,a.createElement)("div",{role:"figure",className:"wp-story-slide",style:{display:m&&!E?"block":"none"},tabIndex:m?0:-1},y&&(0,a.createElement)(xe,s()({},t,{targetAspectRatio:o,cropUpTo:i.cropUpTo,index:n,mediaRef:f}))))};var _e=se((0,a.createElement)(te.G,null,(0,a.createElement)(te.Path,{d:"M17 5a2 2 0 0 1 2 2v13a2 2 0 0 1-2 2h-7a2 2 0 0 1-2-2h9z"}),(0,a.createElement)(te.Path,{d:"M13 4H5a2 2 0 0 1 2-2h6a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2z"}),(0,a.createElement)(te.Path,{d:"M7 16h8a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2z"})));const Re=({key:e,playerId:t,index:n,disabled:r,isSelected:l,onClick:s})=>{const i=(0,c.useSelect)((e=>e("jetpack/story/player").getCurrentSlideProgressPercentage(t)),[]);return(0,a.createElement)(ne,{key:e,index:n,progress:i,disabled:r,isSelected:l,onClick:s})};var Ie=({playerId:e,slides:t,disabled:n,onSlideSeek:r,maxBullets:l})=>{const{currentSlideIndex:s}=(0,c.useSelect)((t=>({currentSlideIndex:t("jetpack/story/player").getCurrentSlideIndex(e)})),[]),i=Math.min(t.length,l),o=Math.floor(i/2);let u,d=0,p=t.length-1;return t.length<=l||s<o?(u=s,p=i-1):s>=t.length-o?(u=s-t.length+i,d=t.length-i):(u=o,d=s-o,p=s+o),(0,a.createElement)("div",{className:"wp-story-pagination wp-story-pagination-bullets",role:"tablist"},d>0&&(0,a.createElement)(ne,{key:"bullet-0",index:d-1,progress:100,isEllipsis:!0}),(0,U.range)(1,i+1).map(((t,l)=>{const i=l+d;let o=null;if(i<s)o=100;else{if(!(i>s))return(0,a.createElement)(Re,{playerId:e,key:`bullet-${l}`,index:i,disabled:n,isSelected:u===l,onClick:()=>r(i)});o=0}return(0,a.createElement)(ne,{key:`bullet-${l}`,index:i,progress:o,disabled:n,isSelected:u===l,onClick:()=>r(i)})})),p<t.length-1&&(0,a.createElement)(ne,{key:`bullet-${i+1}`,index:p+1,progress:0,isEllipsis:!0}))};var Te=e=>{const t=(0,a.useRef)(),n=(0,a.useRef)(),r=(0,a.useRef)(e),l=(0,a.useCallback)((e=>{e.touches&&1===e.touches.length&&e.preventDefault()}),[]);return(0,a.useEffect)((()=>{r.current=e}),[e]),{onTouchStart:(0,a.useCallback)((e=>{e.target&&(e.target.addEventListener("touchend",l,{passive:!1}),n.current=e.target),t.current=setTimeout((()=>{r.current&&r.current(!0),t.current=null}),200)}),[]),onTouchEnd:(0,a.useCallback)((e=>{t.current?clearTimeout(t.current):(r.current&&r.current(!1),e.stopPropagation()),n.current&&n.current.removeEventListener("touchend",l)}),[])}};const Me=ee.__;function Le({id:e,slides:t,metadata:n,disabled:r}){const{setFullscreen:l,setEnded:i,setPlaying:o,setMuted:u,showSlide:d}=(0,c.useDispatch)("jetpack/story/player"),{playing:p,muted:m,currentSlideIndex:f,currentSlideEnded:y,ended:g,fullscreen:E,settings:h}=(0,c.useSelect)((t=>{const{getCurrentSlideIndex:n,getSettings:r,hasCurrentSlideEnded:l,hasEnded:s,isFullscreen:a,isMuted:i,isPlaying:o}=t("jetpack/story/player");return{playing:o(e),muted:i(e),currentSlideIndex:n(e),currentSlideEnded:l(e),ended:s(e),fullscreen:a(e),settings:r(e)}}),[e]),w=(0,a.useRef)(),[S,v]=(0,a.useState)(null),[b,{width:k,height:N}]=(0,Z.useResizeObserver)(),[C,x]=(0,a.useState)(h.defaultAspectRatio),P=(0,U.some)(t,(e=>(0,X.isBlobURL)(e.url))),_=t=>{d(e,t)},R=(0,a.useCallback)((()=>{r||E||h.playInFullscreen&&!p&&o(e,!0)}),[p,r,E]),{onTouchStart:I,onTouchEnd:T}=Te((t=>{o(e,!t)}),[]),M=(0,a.useCallback)((()=>{f>0&&_(f-1)}),[f]),L=(0,a.useCallback)((()=>{f<t.length-1?_(f+1):i(e)}),[f,t]),O=(0,a.useCallback)((()=>{l(e,!1)}),[]);let z,F;return(0,a.useEffect)((()=>{r&&p&&o(e,!1)}),[r,p]),(0,a.useEffect)((()=>{p&&y&&L()}),[p,y]),(0,a.useLayoutEffect)((()=>{if(!w.current)return;let e=Math.round(h.defaultAspectRatio*w.current.offsetHeight);E&&(e=Math.abs(1-e/k)<h.cropUpTo?k:e),v(e)}),[k,N,E]),(0,a.useLayoutEffect)((()=>{S&&w.current&&w.current.offsetHeight>0&&x(S/w.current.offsetHeight)}),[S]),z=E?[Me("You are currently playing a story.","jetpack"),Me(p?"Press space to pause.":"Press space to play.","jetpack"),Me("Press escape to exit.","jetpack")].join(" "):Me("Play story","jetpack"),F=r?"presentation":E?"dialog":"button",(0,a.createElement)("div",{className:"wp-story-display-contents"},b,(0,a.createElement)("div",{role:F,"aria-label":z,tabIndex:E?-1:0,className:Q()("wp-story-container",{"wp-story-with-controls":!r&&!E&&!h.playInFullscreen,"wp-story-fullscreen":E,"wp-story-ended":g,"wp-story-disabled":r,"wp-story-clickable":!r&&!E}),style:{maxWidth:`${S}px`},onClick:R,onTouchStart:I,onTouchEnd:T},(0,a.createElement)(Ee,s()({},n,{fullscreen:E,onExitFullscreen:O})),(0,a.createElement)("div",{ref:w,className:"wp-story-wrapper"},t.map(((t,n)=>(0,a.createElement)(Pe,{playerId:e,key:n,media:t,index:n,playing:!r&&p,uploading:P,settings:h,targetAspectRatio:C})))),(0,a.createElement)(ve,{icon:_e,slideCount:t.length,showSlideCount:h.showSlideCount,ended:g,hasPrevious:f>0,onPreviousSlide:M,onNextSlide:L}),h.showProgressBar&&(0,a.createElement)(Ie,{playerId:e,slides:t,disabled:!E,onSlideSeek:_,maxBullets:E?h.maxBulletsFullscreen:h.maxBullets}),(0,a.createElement)(ye,{playing:p,muted:m,onPlayPressed:()=>o(e,!p),onMutePressed:()=>u(e,!m),showMute:(e=>{const n=e<t.length?t[e]:null;return!!n&&("video"===n.type||(n.mime||"").startsWith("video/"))})(f)})),E&&(0,a.createElement)(be,{currentMedia:h.blurredBackground&&t.length>f&&t[f]}))}const Oe=window&&window.Element&&window.Element.prototype.hasOwnProperty("attachShadow");function ze({enabled:e,delegatesFocus:t=!1,mode:n="open",globalStyleElements:r=[],adoptedStyleSheets:l=null,mountOnElement:s=null,children:i}){const[o,c]=(0,a.useState)(null),u=s||o,[d,p]=(0,a.useState)(null),m="string"==typeof r?[...document.querySelectorAll(r)]:r,f=Oe&&e&&m.length>0,y=(0,a.useCallback)((e=>{null!==e&&c(e.parentNode)}),[]);if((0,a.useEffect)((()=>{if(!u)return;if(u.shadowRoot)return void p(u.shadowRoot);const e=u.attachShadow({delegatesFocus:t,mode:n});l&&(e.adoptedStyleSheets=l),p(e)}),[u]),f&&!d)return s?null:(0,a.createElement)("span",{ref:y});const g=(0,a.createElement)(a.Fragment,null,f&&(0,a.createElement)(Fe,{globalStyleElements:m}),i);return f?(0,a.createPortal)(g,d):g}function Fe({globalStyleElements:e}){return(0,a.createElement)(a.Fragment,null,e.map((({id:e,tagName:t,attributes:n,innerHTML:r},l)=>"LINK"===t?(0,a.createElement)("link",{key:e||l,id:e,rel:n.rel.value,href:n.href.value}):"STYLE"===t?(0,a.createElement)("style",{key:e||l,id:e},r):void 0)))}function De(e){const t=(0,a.useRef)(null),n=(0,a.useRef)(!1),r=(0,a.useRef)(e),l=(0,a.useRef)(e);return l.current=e,(0,a.useLayoutEffect)((()=>{e.forEach(((e,l)=>{const s=r.current[l];"function"==typeof e&&e!==s&&!1===n.current&&(s(null),e(t.current))})),r.current=e}),e),(0,a.useLayoutEffect)((()=>{n.current=!1})),(0,a.useCallback)((e=>{t.current=e,n.current=!0;(e?l.current:r.current).forEach((t=>{"function"==typeof t?t(e):t&&t.hasOwnProperty("current")&&(t.current=e)}))}),[])}function Ae({overlayClassName:e,children:t,className:n,focusOnMount:r,shouldCloseOnEsc:l=!0,onRequestClose:s,onKeyDown:i,modalRef:o}){const c=(0,Z.useFocusOnMount)(r),d=(0,Z.useConstrainedTabbing)(),p=(0,Z.useFocusReturn)();return(0,a.createElement)("div",{className:e,onKeyDown:function(e){l&&e.keyCode===u.ESCAPE&&(e.stopPropagation(),s&&s(e)),e.target&&"button"===e.target.tagName.toLowerCase()&&e.keyCode===u.SPACE||i&&i(e)}},(0,a.createElement)("div",{className:n,ref:De([d,p,c,o])},t))}const je=new Set(["alert","status","log","marquee","timer"]);let Ue=[],Be=!1;function He(e){if(Be)return;const t=document.body.children;(0,U.forEach)(t,(t=>{t!==e&&function(e){const t=e.getAttribute("role");return!("SCRIPT"===e.tagName||e.hasAttribute("aria-hidden")||e.hasAttribute("aria-live")||je.has(t))}(t)&&(t.setAttribute("aria-hidden","true"),Ue.push(t))})),Be=!0}let qe,Ge=0;const $e=()=>{};class Ve extends a.Component{constructor(e){super(e),this.prepareDOM()}componentDidMount(){Ge++,1===Ge&&this.openFirstModal()}componentWillUnmount(){Ge--,0===Ge&&this.closeLastModal(),this.cleanDOM()}prepareDOM(){qe||(qe=document.createElement("div"),document.body.appendChild(qe)),this.node=document.createElement("div"),qe.appendChild(this.node),this.node.ontouchstart=$e,this.node.ontouchend=$e}cleanDOM(){qe.removeChild(this.node)}openFirstModal(){He(qe)}closeLastModal(){Be&&((0,U.forEach)(Ue,(e=>{e.removeAttribute("aria-hidden")})),Ue=[],Be=!1)}render(){const{children:e,isOpened:t,shadowDOM:n,...r}=this.props;return(0,a.createElement)(ze,s()({},n,{mountOnElement:this.node}),t&&(0,a.createElement)(Ae,r,e))}}Ve.defaultProps={shouldCloseOnEsc:!0,isOpened:!1,focusOnMount:!0};var We=(0,Z.withInstanceId)(Ve);const Ke=/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(window.navigator.userAgent);function Ye({className:e,fullscreenClassName:t,bodyFullscreenClassName:n,fullscreen:r,shadowDOM:l,onKeyDown:s,onExitFullscreen:i,playerQuerySelector:o,children:c}){const u=(0,a.useRef)(),d=(0,a.useRef)(),[p,m]=(0,a.useState)(null),f=Ke&&(document.fullscreenEnabled||document.webkitFullscreenEnabled||document.mozFullScreenEnabled||document.msFullscreenEnabled),y=r&&!f,g=r&&f;return(0,a.useLayoutEffect)((()=>{if(f)r?u.current&&((e,t)=>{if((e.requestFullscreen||e.webkitRequestFullScreen||e.mozRequestFullScreen||e.msRequestFullscreen).call(e),t){const e=()=>{document.fullscreenElement||(document.removeEventListener("fullscreenchange",e),t())};document.addEventListener("fullscreenchange",e)}})(u.current,i):(document.fullscreenElement||document.webkitFullscreenElement||document.mozFullScreenElement||document.msFullScreenElement)&&(document.exitFullscreen||document.webkitExitFullscreen||document.mozCancelFullScreen||document.msExitFullscreen).call(document);else if(r){if(m([document.documentElement.scrollLeft,document.documentElement.scrollTop]),document.body.classList.add(n),document.getElementsByTagName("html")[0].classList.add(n),d.current){const e=d.current.querySelector(o);e&&e.focus()}}else if(document.body.classList.remove(n),document.getElementsByTagName("html")[0].classList.remove(n),p){window.scrollTo(...p);const e=u.current.querySelector(o);e&&e.focus()}}),[r]),(0,a.createElement)(a.Fragment,null,(0,a.createElement)(ze,l,(0,a.createElement)("div",{ref:u,className:Q()(e,{[t]:g}),onKeyDown:s},!y&&c)),(0,a.createElement)(We,{className:Q()(e,{[t]:y}),isOpened:y,onRequestClose:i,shadowDOM:l,onKeyDown:y&&s,focusOnMount:!1,modalRef:d},y&&c))}function Je({id:e,slides:t,metadata:n,disabled:r,...l}){const s=(0,a.useMemo)((()=>e||Math.random().toString(36)),[e]),{init:i,setEnded:o,setPlaying:d,setFullscreen:p,showSlide:m}=(0,c.useDispatch)("jetpack/story/player"),{playing:f,currentSlideIndex:y,fullscreen:g,isReady:E,playerSettings:h}=(0,c.useSelect)((e=>{const{getCurrentSlideIndex:t,getSettings:n,isFullscreen:r,isPlayerReady:l,isPlaying:a}=e("jetpack/story/player");return l(s)?{playing:a(s),currentSlideIndex:t(s),isReady:!0,fullscreen:r(s),playerSettings:n(s)}:{isReady:!1}}),[s]);(0,a.useEffect)((()=>{E||i(s,{slideCount:t.length,...l})}),[E,s]);const w=(0,a.useCallback)((e=>{switch(e.keyCode){case u.ENTER:if(g)break;case u.SPACE:d(s,!f);break;case u.LEFT:y>0&&m(s,y-1);break;case u.RIGHT:y<t.length-1?m(s,y+1):o(s)}}),[s,y,g,f]),S=(0,a.useCallback)((()=>{p(s,!1)}),[s]);return E?(0,a.createElement)(Ye,{shadowDOM:h.shadowDOM,className:"wp-story-app",fullscreenClassName:"wp-story-fullscreen",bodyFullscreenClassName:"wp-story-in-fullscreen",playerQuerySelector:".wp-story-container",fullscreen:g,onExitFullscreen:S,onKeyDown:w},(0,a.createElement)(Le,{id:s,slides:t,metadata:n,disabled:r})):null}if("undefined"!=typeof window){const e=Array.from(new URLSearchParams(window.location.search).entries()).filter((e=>e[0].startsWith("wp-story-"))).reduce(((e,t)=>{const n=t[0].replace(/^wp-story-/,"").replace(/-([a-z])/g,(e=>e[1].toUpperCase()));try{e[n]=JSON.parse(t[1])}catch(r){e[n]=JSON.parse(`"${t[1]}"`)}return e}),{});o()((function(){const t=[...document.querySelectorAll(":not(#debug-bar-wp-query) .wp-story")];t.forEach((n=>{if("true"===n.getAttribute("data-block-initialized"))return;let r=null;1===t.length&&(r={...e});const l=n.getAttribute("data-settings");if(l)try{r={...r,...JSON.parse(l)}}catch(i){}!function(e,t){"string"==typeof e&&(e=document.querySelectorAll(e));const n=e.querySelector(".wp-story-wrapper"),r=e.querySelector(".wp-story-meta");let l=[];n&&n.children.length>0&&(l=function(e){return[...e.querySelectorAll("li > figure > :first-child")].map((e=>({alt:e.getAttribute("alt")||e.getAttribute("title"),mime:e.getAttribute("data-mime")||e.getAttribute("type"),url:e.getAttribute("src"),id:e.getAttribute("data-id"),type:"img"===e.tagName.toLowerCase()?"image":"video",srcset:e.getAttribute("srcset"),sizes:e.getAttribute("sizes")})))}(n));let i={};r&&r.children.length>0&&(i=function(e){const t=e.querySelector("div:first-child > img"),n=e.querySelector(".wp-story-title"),r=t&&t.src;return{storyTitle:n&&n.innerText,siteIconUrl:r}}(r));const o=function(e){return e.getAttribute("data-id")}(e);(0,a.render)((0,a.createElement)(Je,s()({id:o,slides:l,metadata:i,disabled:!1},t)),e)}(n,r)}))}))}}();var l=window;for(var s in r)l[s]=r[s];r.__esModule&&Object.defineProperty(l,"__esModule",{value:!0})}();;
/* global wpcom, jetpackCarouselStrings, DocumentTouch */

( function () {
	'use strict';
	var swiper;
	/////////////////////////////////////
	// Utility functions
	/////////////////////////////////////
	var util = ( function () {
		var noop = function () {};

		function texturize( text ) {
			// Ensure we get a string.
			text = text + '';
			text = text.replace( /'/g, '&#8217;' ).replace( /&#039;/g, '&#8217;' );
			text = text
				.replace( /"/g, '&#8221;' )
				.replace( /&#034;/g, '&#8221;' )
				.replace( /&quot;/g, '&#8221;' )
				.replace( /[\u201D]/g, '&#8221;' );
			// Untexturize allowed HTML tags params double-quotes.
			text = text.replace( /([\w]+)=&#[\d]+;(.+?)&#[\d]+;/g, '$1="$2"' );
			return text.trim();
		}

		function applyReplacements( text, replacements ) {
			if ( ! text ) {
				return;
			}
			if ( ! replacements ) {
				return text;
			}
			return text.replace( /{(\d+)}/g, function ( match, number ) {
				return typeof replacements[ number ] !== 'undefined' ? replacements[ number ] : match;
			} );
		}

		function getBackgroundImage( imgEl ) {
			var canvas = document.createElement( 'canvas' ),
				context = canvas.getContext && canvas.getContext( '2d' );

			if ( ! imgEl ) {
				return;
			}

			context.filter = 'blur(20px) ';
			context.drawImage( imgEl, 0, 0 );
			var url = canvas.toDataURL( 'image/png' );
			canvas = null;

			return url;
		}

		return {
			noop: noop,
			texturize: texturize,
			applyReplacements: applyReplacements,
			getBackgroundImage: getBackgroundImage,
		};
	} )();

	/////////////////////////////////////
	// DOM-related utility functions
	/////////////////////////////////////
	var domUtil = ( function () {
		// Helper matches function (not a polyfill), compatible with IE 11.
		function matches( el, sel ) {
			if ( Element.prototype.matches ) {
				return el.matches( sel );
			}

			if ( Element.prototype.msMatchesSelector ) {
				return el.msMatchesSelector( sel );
			}
		}

		// Helper closest parent node function (not a polyfill) based on
		// https://developer.mozilla.org/en-US/docs/Web/API/Element/closest#Polyfill
		function closest( el, sel ) {
			if ( el.closest ) {
				return el.closest( sel );
			}

			var current = el;

			do {
				if ( matches( current, sel ) ) {
					return current;
				}
				current = current.parentElement || current.parentNode;
			} while ( current !== null && current.nodeType === 1 );

			return null;
		}

		function hide( el ) {
			if ( el ) {
				el.style.display = 'none';
			}
		}

		function show( el ) {
			if ( el ) {
				// Everything we show and hide in Carousel is currently a block,
				// so we can make this really straightforward.
				el.style.display = 'block';
			}
		}

		function fade( el, start, end, callback ) {
			if ( ! el ) {
				return callback();
			}

			// Prepare for transition.
			// Ensure the item is in the render tree, in its initial state.
			el.style.removeProperty( 'display' );
			el.style.opacity = start;
			el.style.transition = 'opacity 0.2s';
			el.style.pointerEvents = 'none';

			var finished = function ( e ) {
				if ( e.target === el && e.propertyName === 'opacity' ) {
					el.style.removeProperty( 'transition' );
					el.style.removeProperty( 'opacity' );
					el.style.removeProperty( 'pointer-events' );
					el.removeEventListener( 'transitionend', finished );
					el.removeEventListener( 'transitioncancel', finished );
					callback();
				}
			};

			requestAnimationFrame( function () {
				// Double rAF for browser compatibility.
				requestAnimationFrame( function () {
					el.addEventListener( 'transitionend', finished );
					el.addEventListener( 'transitioncancel', finished );
					// Trigger transition.
					el.style.opacity = end;
				} );
			} );
		}

		function fadeIn( el, callback ) {
			callback = callback || util.noop;
			fade( el, '0', '1', callback );
		}

		function fadeOut( el, callback ) {
			callback = callback || util.noop;
			fade( el, '1', '0', function () {
				if ( el ) {
					el.style.display = 'none';
				}
				callback();
			} );
		}

		function emitEvent( el, type, detail ) {
			var e;
			try {
				e = new CustomEvent( type, {
					bubbles: true,
					cancelable: true,
					detail: detail || null,
				} );
			} catch ( err ) {
				e = document.createEvent( 'CustomEvent' );
				e.initCustomEvent( type, true, true, detail || null );
			}
			el.dispatchEvent( e );
		}

		// From: https://easings.net/#easeInOutQuad
		function easeInOutQuad( num ) {
			return num < 0.5 ? 2 * num * num : 1 - Math.pow( -2 * num + 2, 2 ) / 2;
		}

		function getFooterClearance( container ) {
			var footer = container.querySelector( '.jp-carousel-info-footer' );
			var infoArea = container.querySelector( '.jp-carousel-info-extra' );
			var contentArea = container.querySelector( '.jp-carousel-info-content-wrapper' );

			if ( footer && infoArea && contentArea ) {
				var styles = window.getComputedStyle( infoArea );
				var padding = parseInt( styles.paddingTop, 10 ) + parseInt( styles.paddingBottom, 10 );
				padding = isNaN( padding ) ? 0 : padding;
				return contentArea.offsetHeight + footer.offsetHeight + padding;
			}
			return 0;
		}

		function isTouch() {
			return (
				'ontouchstart' in window || ( window.DocumentTouch && document instanceof DocumentTouch )
			);
		}

		function scrollToElement( el, container, callback ) {
			if ( ! el || ! container ) {
				if ( callback ) {
					return callback();
				}
				return;
			}

			// For iOS Safari compatibility, use JS to set the minimum height.
			var infoArea = container.querySelector( '.jp-carousel-info-extra' );
			if ( infoArea ) {
				// 64px is the same height as `.jp-carousel-info-footer` in the CSS.
				infoArea.style.minHeight = window.innerHeight - 64 + 'px';
			}

			var isScrolling = true;
			var startTime = Date.now();
			var duration = 300;
			var originalPosition = container.scrollTop;
			var targetPosition = Math.max(
				0,
				el.offsetTop - Math.max( 0, window.innerHeight - getFooterClearance( container ) )
			);
			var distance = targetPosition - container.scrollTop;
			distance = Math.min( distance, container.scrollHeight - window.innerHeight );

			function stopScroll() {
				isScrolling = false;
			}

			function runScroll() {
				var now = Date.now();
				var progress = easeInOutQuad( ( now - startTime ) / duration );

				progress = progress > 1 ? 1 : progress;
				var newVal = progress * distance;
				container.scrollTop = originalPosition + newVal;

				if ( now <= startTime + duration && isScrolling ) {
					return requestAnimationFrame( runScroll );
				}
				if ( callback ) {
					callback();
				}
				if ( infoArea ) {
					infoArea.style.minHeight = '';
				}
				isScrolling = false;
				container.removeEventListener( 'wheel', stopScroll );
			}

			// Allow scroll to be cancelled by user interaction.
			container.addEventListener( 'wheel', stopScroll );
			runScroll();
		}

		function getJSONAttribute( el, attr ) {
			if ( ! el || ! el.hasAttribute( attr ) ) {
				return undefined;
			}

			try {
				return JSON.parse( el.getAttribute( attr ) );
			} catch ( e ) {
				return undefined;
			}
		}

		function convertToPlainText( html ) {
			var dummy = document.createElement( 'div' );
			dummy.textContent = html;
			return dummy.innerHTML;
		}

		function stripHTML( text ) {
			return text.replace( /<[^>]*>?/gm, '' );
		}

		return {
			closest: closest,
			matches: matches,
			hide: hide,
			show: show,
			fadeIn: fadeIn,
			fadeOut: fadeOut,
			scrollToElement: scrollToElement,
			getJSONAttribute: getJSONAttribute,
			convertToPlainText: convertToPlainText,
			stripHTML: stripHTML,
			emitEvent: emitEvent,
			isTouch: isTouch,
		};
	} )();

	/////////////////////////////////////
	// Carousel implementation
	/////////////////////////////////////
	function init() {
		var commentInterval;
		var screenPadding;
		var originalOverflow;
		var originalHOverflow;
		var scrollPos;

		var lastKnownLocationHash = '';
		var isUserTyping = false;

		var gallerySelector =
			'div.gallery, div.tiled-gallery, ul.wp-block-gallery, ul.blocks-gallery-grid, ' +
			'figure.blocks-gallery-grid, div.wp-block-jetpack-tiled-gallery, a.single-image-gallery';

		// Selector for items within a gallery or tiled gallery.
		var galleryItemSelector =
			'.gallery-item, .tiled-gallery-item, .blocks-gallery-item, ' + ' .tiled-gallery__item';

		// Selector for all items including single images.
		var itemSelector = galleryItemSelector + ', .wp-block-image';

		var carousel = {};

		var stat =
			typeof wpcom !== 'undefined' && wpcom.carousel && wpcom.carousel.stat
				? wpcom.carousel.stat
				: util.noop;

		var pageview =
			typeof wpcom !== 'undefined' && wpcom.carousel && wpcom.carousel.pageview
				? wpcom.carousel.pageview
				: util.noop;

		function handleKeyboardEvent( e ) {
			if ( ! isUserTyping ) {
				switch ( e.which ) {
					case 38: // up
						e.preventDefault();
						carousel.overlay.scrollTop -= 100;
						break;
					case 40: // down
						e.preventDefault();
						carousel.overlay.scrollTop += 100;
						break;
					case 39: // right
						e.preventDefault();
						swiper.slideNext();
						break;
					case 37: // left
					case 8: // backspace
						e.preventDefault();
						swiper.slidePrev();
						break;
					case 27: // escape
						e.preventDefault();
						closeCarousel();
						break;
					default:
						break;
				}
			}
		}

		function disableKeyboardNavigation() {
			isUserTyping = true;
		}

		function enableKeyboardNavigation() {
			isUserTyping = false;
		}

		function calculatePadding() {
			var baseScreenPadding = 110;
			screenPadding = baseScreenPadding;

			if ( window.innerWidth <= 760 ) {
				screenPadding = Math.round( ( window.innerWidth / 760 ) * baseScreenPadding );

				if ( screenPadding < 40 && domUtil.isTouch() ) {
					screenPadding = 0;
				}
			}
		}

		function initializeCarousel() {
			if ( ! carousel.overlay ) {
				carousel.overlay = document.querySelector( '.jp-carousel-overlay' );
				carousel.container = carousel.overlay.querySelector( '.jp-carousel-wrap' );
				carousel.gallery = carousel.container.querySelector( '.jp-carousel' );
				carousel.info = carousel.overlay.querySelector( '.jp-carousel-info' );
				carousel.caption = carousel.info.querySelector( '.jp-carousel-caption' );
				carousel.commentField = carousel.overlay.querySelector(
					'#jp-carousel-comment-form-comment-field'
				);
				carousel.emailField = carousel.overlay.querySelector(
					'#jp-carousel-comment-form-email-field'
				);
				carousel.authorField = carousel.overlay.querySelector(
					'#jp-carousel-comment-form-author-field'
				);
				carousel.urlField = carousel.overlay.querySelector( '#jp-carousel-comment-form-url-field' );

				calculatePadding();

				[
					carousel.commentField,
					carousel.emailField,
					carousel.authorField,
					carousel.urlField,
				].forEach( function ( field ) {
					if ( field ) {
						field.addEventListener( 'focus', disableKeyboardNavigation );
						field.addEventListener( 'blur', enableKeyboardNavigation );
					}
				} );

				carousel.overlay.addEventListener( 'click', function ( e ) {
					var target = e.target;
					var isTargetCloseHint = !! domUtil.closest( target, '.jp-carousel-close-hint' );
					var isSmallScreen = !! window.matchMedia( '(max-device-width: 760px)' ).matches;
					if ( target === carousel.overlay ) {
						if ( isSmallScreen ) {
							return;
						} else {
							closeCarousel();
						}
					} else if ( isTargetCloseHint ) {
						closeCarousel();
					} else if ( target.classList.contains( 'jp-carousel-image-download' ) ) {
						stat( 'download_original_click' );
					} else if ( target.classList.contains( 'jp-carousel-comment-login' ) ) {
						handleCommentLoginClick( e );
					} else if ( domUtil.closest( target, '#jp-carousel-comment-form-container' ) ) {
						handleCommentFormClick( e );
					} else if (
						domUtil.closest( target, '.jp-carousel-photo-icons-container' ) ||
						target.classList.contains( 'jp-carousel-photo-title' )
					) {
						handleFooterElementClick( e );
					} else if ( ! domUtil.closest( target, '.jp-carousel-info' ) ) {
						return;
					}
				} );

				window.addEventListener( 'keydown', handleKeyboardEvent );

				carousel.overlay.addEventListener( 'jp_carousel.afterOpen', function () {
					enableKeyboardNavigation();

					// Don't show navigation if there's only one image.
					if ( carousel.slides.length <= 1 ) {
						return;
					}
					// Show dot pagination if slide count is <= 5, otherwise show n/total.
					if ( carousel.slides.length <= 5 ) {
						domUtil.show( carousel.info.querySelector( '.jp-swiper-pagination' ) );
					} else {
						domUtil.show( carousel.info.querySelector( '.jp-carousel-pagination' ) );
					}
				} );

				carousel.overlay.addEventListener( 'jp_carousel.beforeClose', function () {
					disableKeyboardNavigation();

					// Fixes some themes where closing carousel brings view back to top.
					document.documentElement.style.removeProperty( 'height' );

					// If we disable the swiper (because there's only one image)
					// we have to re-enable it here again as Swiper doesn't, for some reason,
					// show the navigation buttons again after reinitialization.
					if ( swiper ) {
						swiper.enable();
					}

					// Hide pagination.
					domUtil.hide( carousel.info.querySelector( '.jp-swiper-pagination' ) );
					domUtil.hide( carousel.info.querySelector( '.jp-carousel-pagination' ) );
				} );

				carousel.overlay.addEventListener( 'jp_carousel.afterClose', function () {
					// don't force the browser back when the carousel closes.
					if ( window.history.pushState ) {
						history.pushState(
							'',
							document.title,
							window.location.pathname + window.location.search
						);
					} else {
						window.location.href = '';
					}
					lastKnownLocationHash = '';
					carousel.isOpen = false;
				} );

				// Prevent native browser zooming
				carousel.overlay.addEventListener( 'touchstart', function ( e ) {
					if ( e.touches.length > 1 ) {
						e.preventDefault();
					}
				} );
			}
		}

		function handleCommentLoginClick() {
			var slide = carousel.currentSlide;
			var attachmentId = slide ? slide.attrs.attachmentId : '0';

			window.location.href = jetpackCarouselStrings.login_url + '%23jp-carousel-' + attachmentId;
		}

		function updatePostResults( msg, isSuccess ) {
			var results = carousel.overlay.querySelector( '#jp-carousel-comment-post-results' );
			var elClass = 'jp-carousel-comment-post-' + ( isSuccess ? 'success' : 'error' );
			results.innerHTML = '<span class="' + elClass + '">' + msg + '</span>';
			domUtil.hide( carousel.overlay.querySelector( '#jp-carousel-comment-form-spinner' ) );
			carousel.overlay
				.querySelector( '#jp-carousel-comment-form' )
				.classList.remove( 'jp-carousel-is-disabled' );
			domUtil.show( results );
		}

		function handleCommentFormClick( e ) {
			var target = e.target;
			var data = domUtil.getJSONAttribute( carousel.container, 'data-carousel-extra' ) || {};
			var attachmentId = carousel.currentSlide.attrs.attachmentId;

			var wrapper = document.querySelector( '#jp-carousel-comment-form-submit-and-info-wrapper' );
			var spinner = document.querySelector( '#jp-carousel-comment-form-spinner' );
			var submit = document.querySelector( '#jp-carousel-comment-form-button-submit' );
			var form = document.querySelector( '#jp-carousel-comment-form' );

			if (
				carousel.commentField &&
				carousel.commentField.getAttribute( 'id' ) === target.getAttribute( 'id' )
			) {
				// For first page load
				disableKeyboardNavigation();
				domUtil.show( wrapper );
			} else if ( domUtil.matches( target, 'input[type="submit"]' ) ) {
				e.preventDefault();
				e.stopPropagation();

				domUtil.show( spinner );
				form.classList.add( 'jp-carousel-is-disabled' );

				var ajaxData = {
					action: 'post_attachment_comment',
					nonce: jetpackCarouselStrings.nonce,
					blog_id: data.blog_id,
					id: attachmentId,
					comment: carousel.commentField.value,
				};

				if ( ! ajaxData.comment.length ) {
					updatePostResults( jetpackCarouselStrings.no_comment_text, false );
					return;
				}

				if ( Number( jetpackCarouselStrings.is_logged_in ) !== 1 ) {
					ajaxData.email = carousel.emailField.value;
					ajaxData.author = carousel.authorField.value;
					ajaxData.url = carousel.urlField.value;

					if ( Number( jetpackCarouselStrings.require_name_email ) === 1 ) {
						if ( ! ajaxData.email.length || ! ajaxData.email.match( '@' ) ) {
							updatePostResults( jetpackCarouselStrings.no_comment_email, false );
							return;
						} else if ( ! ajaxData.author.length ) {
							updatePostResults( jetpackCarouselStrings.no_comment_author, false );
							return;
						}
					}
				}

				var xhr = new XMLHttpRequest();
				xhr.open( 'POST', jetpackCarouselStrings.ajaxurl, true );
				xhr.setRequestHeader( 'X-Requested-With', 'XMLHttpRequest' );
				xhr.setRequestHeader( 'Content-Type', 'application/x-www-form-urlencoded; charset=UTF-8' );

				xhr.onreadystatechange = function () {
					if (
						this.readyState === XMLHttpRequest.DONE &&
						this.status >= 200 &&
						this.status < 300
					) {
						var response;
						try {
							response = JSON.parse( this.response );
						} catch ( error ) {
							updatePostResults( jetpackCarouselStrings.comment_post_error, false );
							return;
						}
						if ( response.comment_status === 'approved' ) {
							updatePostResults( jetpackCarouselStrings.comment_approved, true );
						} else if ( response.comment_status === 'unapproved' ) {
							updatePostResults( jetpackCarouselStrings.comment_unapproved, true );
						} else {
							// 'deleted', 'spam', false
							updatePostResults( jetpackCarouselStrings.comment_post_error, false );
						}
						clearCommentTextAreaValue();
						fetchComments( attachmentId );
						submit.value = jetpackCarouselStrings.post_comment;
						domUtil.hide( spinner );
						form.classList.remove( 'jp-carousel-is-disabled' );
					} else {
						// TODO: Add error handling and display here
						updatePostResults( jetpackCarouselStrings.comment_post_error, false );
					}
				};

				var params = [];
				for ( var item in ajaxData ) {
					if ( item ) {
						// Encode each form element into a URI-compatible string.
						var encoded = encodeURIComponent( item ) + '=' + encodeURIComponent( ajaxData[ item ] );
						// In x-www-form-urlencoded, spaces should be `+`, not `%20`.
						params.push( encoded.replace( /%20/g, '+' ) );
					}
				}
				var encodedData = params.join( '&' );

				xhr.send( encodedData );
			}
		}

		/**
		 * Handles clicks to icons and other action elements in the icon container.
		 * @param {MouseEvent|TouchEvent|KeyBoardEvent} Event object.
		 */
		function handleFooterElementClick( e ) {
			e.preventDefault();

			var target = e.target;
			var extraInfoContainer = carousel.info.querySelector( '.jp-carousel-info-extra' );
			var photoMetaContainer = carousel.info.querySelector( '.jp-carousel-image-meta' );
			var commentsContainer = carousel.info.querySelector( '.jp-carousel-comments-wrapper' );
			var infoIcon = carousel.info.querySelector( '.jp-carousel-icon-info' );
			var commentsIcon = carousel.info.querySelector( '.jp-carousel-icon-comments' );

			function handleInfoToggle() {
				if ( commentsIcon ) {
					commentsIcon.classList.remove( 'jp-carousel-selected' );
				}
				infoIcon.classList.toggle( 'jp-carousel-selected' );

				if ( commentsContainer ) {
					commentsContainer.classList.remove( 'jp-carousel-show' );
				}
				if ( photoMetaContainer ) {
					photoMetaContainer.classList.toggle( 'jp-carousel-show' );
					if ( photoMetaContainer.classList.contains( 'jp-carousel-show' ) ) {
						extraInfoContainer.classList.add( 'jp-carousel-show' );
					} else {
						extraInfoContainer.classList.remove( 'jp-carousel-show' );
					}
				}
			}

			function handleCommentToggle() {
				if ( infoIcon ) {
					infoIcon.classList.remove( 'jp-carousel-selected' );
				}
				commentsIcon.classList.toggle( 'jp-carousel-selected' );

				if ( photoMetaContainer ) {
					photoMetaContainer.classList.remove( 'jp-carousel-show' );
				}
				if ( commentsContainer ) {
					commentsContainer.classList.toggle( 'jp-carousel-show' );
					if ( commentsContainer.classList.contains( 'jp-carousel-show' ) ) {
						extraInfoContainer.classList.add( 'jp-carousel-show' );
					} else {
						extraInfoContainer.classList.remove( 'jp-carousel-show' );
					}
				}
			}

			if (
				domUtil.closest( target, '.jp-carousel-icon-info' ) ||
				target.classList.contains( 'jp-carousel-photo-title' )
			) {
				if ( photoMetaContainer && photoMetaContainer.classList.contains( 'jp-carousel-show' ) ) {
					domUtil.scrollToElement( carousel.overlay, carousel.overlay, handleInfoToggle );
				} else {
					handleInfoToggle();
					domUtil.scrollToElement( carousel.info, carousel.overlay );
				}
			}

			if ( domUtil.closest( target, '.jp-carousel-icon-comments' ) ) {
				if ( commentsContainer && commentsContainer.classList.contains( 'jp-carousel-show' ) ) {
					domUtil.scrollToElement( carousel.overlay, carousel.overlay, handleCommentToggle );
				} else {
					handleCommentToggle();
					domUtil.scrollToElement( carousel.info, carousel.overlay );
				}
			}
		}

		function processSingleImageGallery() {
			var images = document.querySelectorAll( 'a img[data-attachment-id]' );
			Array.prototype.forEach.call( images, function ( image ) {
				var link = image.parentElement;
				var container = link.parentElement;

				// Skip if image was already added to gallery by shortcode.
				if ( container.classList.contains( 'gallery-icon' ) ) {
					return;
				}

				// Skip if image is part of a gallery.
				if ( domUtil.closest( container, galleryItemSelector ) ) {
					return;
				}

				// Skip if the parent is not actually a link.
				if ( ! link.hasAttribute( 'href' ) ) {
					return;
				}

				var valid = false;

				// If link points to 'Media File' (ignoring GET parameters) and flag is set, allow it.
				if (
					link.getAttribute( 'href' ).split( '?' )[ 0 ] ===
						image.getAttribute( 'data-orig-file' ).split( '?' )[ 0 ] &&
					Number( jetpackCarouselStrings.single_image_gallery_media_file ) === 1
				) {
					valid = true;
				}

				// If link points to 'Attachment Page', allow it.
				if ( link.getAttribute( 'href' ) === image.getAttribute( 'data-permalink' ) ) {
					valid = true;
				}

				// Links to 'Custom URL' or 'Media File' when flag is not set are not valid.
				if ( ! valid ) {
					return;
				}

				// Make this node a gallery recognizable by event listener above.
				link.classList.add( 'single-image-gallery' );
				// blog_id is needed to allow posting comments to correct blog.
				link.setAttribute(
					'data-carousel-extra',
					JSON.stringify( {
						blog_id: Number( jetpackCarouselStrings.blog_id ),
					} )
				);
			} );
		}

		function testForData( el ) {
			return !! ( el && el.getAttribute( 'data-carousel-extra' ) );
		}

		function openOrSelectSlide( gal, index ) {
			if ( ! carousel.isOpen ) {
				// The `open` method selects the correct slide during the initialization.
				loadSwiper( gal, { startIndex: index } );
			} else {
				selectSlideAtIndex( index );
				// We have to force swiper to slide to the index onHasChange.
				swiper.slideTo( index + 1 );
			}
		}

		function selectSlideAtIndex( index ) {
			if ( ! index || index < 0 || index > carousel.slides.length ) {
				index = 0;
			}
			carousel.currentSlide = carousel.slides[ index ];

			var current = carousel.currentSlide;
			var attachmentId = current.attrs.attachmentId;
			var infoIcon = carousel.info.querySelector( '.jp-carousel-icon-info' );
			var commentsIcon = carousel.info.querySelector( '.jp-carousel-icon-comments' );

			// If the comment/info section is toggled open, it's kept open, but scroll to top of the next slide.
			if (
				( infoIcon && infoIcon.classList.contains( 'jp-carousel-selected' ) ) ||
				( commentsIcon && commentsIcon.classList.contains( 'jp-carousel-selected' ) )
			) {
				if ( carousel.overlay.scrollTop !== 0 ) {
					domUtil.scrollToElement( carousel.overlay, carousel.overlay );
				}
			}

			loadFullImage( carousel.slides[ index ] );

			if (
				Number( jetpackCarouselStrings.display_background_image ) === 1 &&
				! carousel.slides[ index ].backgroundImage
			) {
				loadBackgroundImage( carousel.slides[ index ] );
			}

			domUtil.hide( carousel.caption );
			updateTitleCaptionAndDesc( {
				caption: current.attrs.caption,
				title: current.attrs.title,
				desc: current.attrs.desc,
			} );

			var imageMeta = carousel.slides[ index ].attrs.imageMeta;
			updateExif( imageMeta );
			updateFullSizeLink( current );

			if ( Number( jetpackCarouselStrings.display_comments ) === 1 ) {
				testCommentsOpened( carousel.slides[ index ].attrs.commentsOpened );
				fetchComments( attachmentId );
				domUtil.hide( carousel.info.querySelector( '#jp-carousel-comment-post-results' ) );
			}

			// Update pagination in footer.
			var pagination = carousel.info.querySelector( '.jp-carousel-pagination' );
			if ( pagination && carousel.slides.length > 5 ) {
				var currentPage = index + 1;
				pagination.innerHTML = '<span>' + currentPage + ' / ' + carousel.slides.length + '</span>';
			}

			// Record pageview in WP Stats, for each new image loaded full-screen.
			if ( jetpackCarouselStrings.stats ) {
				new Image().src =
					document.location.protocol +
					'//pixel.wp.com/g.gif?' +
					jetpackCarouselStrings.stats +
					'&post=' +
					encodeURIComponent( attachmentId ) +
					'&rand=' +
					Math.random();
			}

			pageview( attachmentId );

			window.location.hash = lastKnownLocationHash = '#jp-carousel-' + attachmentId;
		}

		function restoreScroll() {
			window.scrollTo( window.scrollX || window.pageXOffset || 0, scrollPos || 0 );
		}

		function closeCarousel() {
			// Make sure to let the page scroll again.
			document.body.style.overflow = originalOverflow;
			document.documentElement.style.overflow = originalHOverflow;
			clearCommentTextAreaValue();

			disableKeyboardNavigation();

			domUtil.emitEvent( carousel.overlay, 'jp_carousel.beforeClose' );
			restoreScroll();
			swiper.destroy();
			carousel.isOpen = false;
			// Clear slide data for DOM garbage collection.
			carousel.slides = [];
			carousel.currentSlide = undefined;
			carousel.gallery.innerHTML = '';

			domUtil.fadeOut( carousel.overlay, function () {
				domUtil.emitEvent( carousel.overlay, 'jp_carousel.afterClose' );
			} );
		}

		function calculateMaxSlideDimensions() {
			return {
				width: window.innerWidth,
				height: window.innerHeight - 64, //subtract height of bottom info bar,
			};
		}

		function selectBestImageUrl( args ) {
			if ( typeof args !== 'object' ) {
				args = {};
			}

			if ( typeof args.origFile === 'undefined' ) {
				return '';
			}

			if ( typeof args.origWidth === 'undefined' || typeof args.maxWidth === 'undefined' ) {
				return args.origFile;
			}

			if ( typeof args.mediumFile === 'undefined' || typeof args.largeFile === 'undefined' ) {
				return args.origFile;
			}

			// Check if the image is being served by Photon (using a regular expression on the hostname).

			var imageLinkParser = document.createElement( 'a' );
			imageLinkParser.href = args.largeFile;

			var isPhotonUrl = /^i[0-2]\.wp\.com$/i.test( imageLinkParser.hostname );

			var mediumSizeParts = getImageSizeParts( args.mediumFile, args.origWidth, isPhotonUrl );
			var largeSizeParts = getImageSizeParts( args.largeFile, args.origWidth, isPhotonUrl );

			var largeWidth = parseInt( largeSizeParts[ 0 ], 10 );
			var largeHeight = parseInt( largeSizeParts[ 1 ], 10 );
			var mediumWidth = parseInt( mediumSizeParts[ 0 ], 10 );
			var mediumHeight = parseInt( mediumSizeParts[ 1 ], 10 );

			args.origMaxWidth = args.maxWidth;
			args.origMaxHeight = args.maxHeight;

			// Give devices with a higher devicePixelRatio higher-res images (Retina display = 2, Android phones = 1.5, etc)
			if ( typeof window.devicePixelRatio !== 'undefined' && window.devicePixelRatio > 1 ) {
				args.maxWidth = args.maxWidth * window.devicePixelRatio;
				args.maxHeight = args.maxHeight * window.devicePixelRatio;
			}

			if ( largeWidth >= args.maxWidth || largeHeight >= args.maxHeight ) {
				return args.largeFile;
			}

			if ( mediumWidth >= args.maxWidth || mediumHeight >= args.maxHeight ) {
				return args.mediumFile;
			}

			if ( isPhotonUrl ) {
				// args.origFile doesn't point to a Photon url, so in this case we use args.largeFile
				// to return the photon url of the original image.
				var largeFileIndex = args.largeFile.lastIndexOf( '?' );
				var origPhotonUrl = args.largeFile;
				if ( largeFileIndex !== -1 ) {
					origPhotonUrl = args.largeFile.substring( 0, largeFileIndex );
					// If we have a really large image load a smaller version
					// that is closer to the viewable size
					if ( args.origWidth > args.maxWidth || args.origHeight > args.maxHeight ) {
						// @2x the max sizes so we get a high enough resolution for zooming.
						args.origMaxWidth = args.maxWidth * 2;
						args.origMaxHeight = args.maxHeight * 2;
						origPhotonUrl += '?fit=' + args.origMaxWidth + '%2C' + args.origMaxHeight;
					}
				}
				return origPhotonUrl;
			}

			return args.origFile;
		}

		function getImageSizeParts( file, origWidth, isPhotonUrl ) {
			var size = isPhotonUrl
				? file.replace( /.*=([\d]+%2C[\d]+).*$/, '$1' )
				: file.replace( /.*-([\d]+x[\d]+)\..+$/, '$1' );

			var sizeParts =
				size !== file
					? isPhotonUrl
						? size.split( '%2C' )
						: size.split( 'x' )
					: [ origWidth, 0 ];

			// If one of the dimensions is set to 9999, then the actual value of that dimension can't be retrieved from the url.
			// In that case, we set the value to 0.
			if ( sizeParts[ 0 ] === '9999' ) {
				sizeParts[ 0 ] = '0';
			}

			if ( sizeParts[ 1 ] === '9999' ) {
				sizeParts[ 1 ] = '0';
			}

			return sizeParts;
		}

		/**
		 * Returns a number in a fraction format that represents the shutter speed.
		 * @param Number speed
		 * @return String
		 */
		function formatShutterSpeed( speed ) {
			var denominator;

			// round to one decimal if value > 1s by multiplying it by 10, rounding, then dividing by 10 again
			if ( speed >= 1 ) {
				return Math.round( speed * 10 ) / 10 + 's';
			}

			// If the speed is less than one, we find the denominator by inverting
			// the number. Since cameras usually use rational numbers as shutter
			// speeds, we should get a nice round number. Or close to one in cases
			// like 1/30. So we round it.
			denominator = Math.round( 1 / speed );

			return '1/' + denominator + 's';
		}

		function parseTitleOrDesc( value ) {
			if ( ! value.match( ' ' ) && value.match( '_' ) ) {
				return '';
			}

			return value;
		}

		function updateTitleCaptionAndDesc( data ) {
			var caption = '';
			var title = '';
			var desc = '';
			var captionMainElement;
			var captionInfoExtraElement;
			var titleElement;
			var descriptionElement;

			captionMainElement = carousel.overlay.querySelector( '.jp-carousel-photo-caption' );
			captionInfoExtraElement = carousel.overlay.querySelector( '.jp-carousel-caption' );

			titleElement = carousel.overlay.querySelector( '.jp-carousel-photo-title' );
			descriptionElement = carousel.overlay.querySelector( '.jp-carousel-photo-description' );

			domUtil.hide( captionMainElement );
			domUtil.hide( captionInfoExtraElement );
			domUtil.hide( titleElement );
			domUtil.hide( descriptionElement );

			caption = parseTitleOrDesc( data.caption ) || '';
			title = parseTitleOrDesc( data.title ) || '';
			desc = parseTitleOrDesc( data.desc ) || '';

			if ( caption || title || desc ) {
				if ( caption ) {
					captionMainElement.innerHTML = caption;
					captionInfoExtraElement.innerHTML = caption;

					domUtil.show( captionMainElement );
					domUtil.show( captionInfoExtraElement );
				}

				if ( domUtil.stripHTML( caption ) === domUtil.stripHTML( title ) ) {
					title = '';
				}

				if ( domUtil.stripHTML( caption ) === domUtil.stripHTML( desc ) ) {
					desc = '';
				}

				if ( domUtil.stripHTML( title ) === domUtil.stripHTML( desc ) ) {
					desc = '';
				}

				if ( desc ) {
					descriptionElement.innerHTML = desc;
					domUtil.show( descriptionElement );

					if ( ! title && ! caption ) {
						captionMainElement.innerHTML = domUtil.stripHTML( desc );
						domUtil.show( captionMainElement );
					}
				}

				if ( title ) {
					var plainTitle = domUtil.stripHTML( title );
					titleElement.innerHTML = plainTitle;

					if ( ! caption ) {
						captionMainElement.innerHTML = plainTitle;
						captionInfoExtraElement.innerHTML = plainTitle;

						domUtil.show( captionMainElement );
					}

					domUtil.show( titleElement );
				}
			}
		}

		// updateExif updates the contents of the exif UL (.jp-carousel-image-exif)
		function updateExif( meta ) {
			if ( ! meta || Number( jetpackCarouselStrings.display_exif ) !== 1 ) {
				return false;
			}

			var ul = carousel.info.querySelector( '.jp-carousel-image-meta ul.jp-carousel-image-exif' );
			var html = '';

			for ( var key in meta ) {
				var val = meta[ key ];
				var metaKeys = jetpackCarouselStrings.meta_data || [];

				if ( parseFloat( val ) === 0 || ! val.length || metaKeys.indexOf( key ) === -1 ) {
					continue;
				}

				switch ( key ) {
					case 'focal_length':
						val = val + 'mm';
						break;
					case 'shutter_speed':
						val = formatShutterSpeed( val );
						break;
					case 'aperture':
						val = 'f/' + val;
						break;
				}

				html += '<li><h5>' + jetpackCarouselStrings[ key ] + '</h5>' + val + '</li>';
			}

			ul.innerHTML = html;
			ul.style.removeProperty( 'display' );
		}

		// Update the contents of the jp-carousel-image-download link
		function updateFullSizeLink( currentSlide ) {
			if ( ! currentSlide ) {
				return false;
			}
			var original;
			var origSize = [ currentSlide.attrs.origWidth, currentSlide.attrs.origHeight ];
			var imageLinkParser = document.createElement( 'a' );

			imageLinkParser.href = currentSlide.attrs.src.replace( /\?.+$/, '' );

			// Is this a Photon URL?
			if ( imageLinkParser.hostname.match( /^i[\d]{1}\.wp\.com$/i ) !== null ) {
				original = imageLinkParser.href;
			} else {
				original = currentSlide.attrs.origFile.replace( /\?.+$/, '' );
			}

			var downloadText = carousel.info.querySelector( '.jp-carousel-download-text' );
			var permalink = carousel.info.querySelector( '.jp-carousel-image-download' );

			downloadText.innerHTML = util.applyReplacements(
				jetpackCarouselStrings.download_original,
				origSize
			);
			permalink.setAttribute( 'href', original );
			permalink.style.removeProperty( 'display' );
		}

		function testCommentsOpened( opened ) {
			var commentForm = carousel.container.querySelector( '.jp-carousel-comment-form-container' );
			var isOpened = parseInt( opened, 10 ) === 1;

			if ( isOpened ) {
				domUtil.fadeIn( commentForm );
			} else {
				domUtil.fadeOut( commentForm );
			}
		}

		function fetchComments( attachmentId, offset ) {
			var shouldClear = offset === undefined;
			var commentsIndicator = carousel.info.querySelector(
				'.jp-carousel-icon-comments .jp-carousel-has-comments-indicator'
			);

			commentsIndicator.classList.remove( 'jp-carousel-show' );

			clearInterval( commentInterval );

			if ( ! attachmentId ) {
				return;
			}

			if ( ! offset || offset < 1 ) {
				offset = 0;
			}

			var comments = carousel.info.querySelector( '.jp-carousel-comments' );
			var commentsLoading = carousel.info.querySelector( '#jp-carousel-comments-loading' );
			domUtil.show( commentsLoading );

			if ( shouldClear ) {
				domUtil.hide( comments );
				comments.innerHTML = '';
			}

			var xhr = new XMLHttpRequest();
			var url =
				jetpackCarouselStrings.ajaxurl +
				'?action=get_attachment_comments' +
				'&nonce=' +
				jetpackCarouselStrings.nonce +
				'&id=' +
				attachmentId +
				'&offset=' +
				offset;
			xhr.open( 'GET', url );
			xhr.setRequestHeader( 'X-Requested-With', 'XMLHttpRequest' );

			var onError = function () {
				domUtil.fadeIn( comments );
				domUtil.fadeOut( commentsLoading );
			};

			xhr.onload = function () {
				// Ignore the results if they arrive late and we're now on a different slide.
				if (
					! carousel.currentSlide ||
					carousel.currentSlide.attrs.attachmentId !== attachmentId
				) {
					return;
				}

				var isSuccess = xhr.status >= 200 && xhr.status < 300;
				var data;
				try {
					data = JSON.parse( xhr.responseText );
				} catch ( e ) {
					// Do nothing.
				}

				if ( ! isSuccess || ! data || ! Array.isArray( data ) ) {
					return onError();
				}

				if ( shouldClear ) {
					comments.innerHTML = '';
				}

				for ( var i = 0; i < data.length; i++ ) {
					var entry = data[ i ];
					var comment = document.createElement( 'div' );
					comment.classList.add( 'jp-carousel-comment' );
					comment.setAttribute( 'id', 'jp-carousel-comment-' + entry.id );
					comment.innerHTML =
						'<div class="comment-gravatar">' +
						entry.gravatar_markup +
						'</div>' +
						'<div class="comment-content">' +
						'<div class="comment-author">' +
						entry.author_markup +
						'</div>' +
						'<div class="comment-date">' +
						entry.date_gmt +
						'</div>' +
						entry.content +
						'</div>';
					comments.appendChild( comment );

					// Set the interval to check for a new page of comments.
					clearInterval( commentInterval );
					commentInterval = setInterval( function () {
						if ( carousel.container.scrollTop + 150 > window.innerHeight ) {
							fetchComments( attachmentId, offset + 10 );
							clearInterval( commentInterval );
						}
					}, 300 );
				}

				if ( data.length > 0 ) {
					domUtil.show( comments );
					commentsIndicator.innerText = data.length;
					commentsIndicator.classList.add( 'jp-carousel-show' );
				}

				domUtil.hide( commentsLoading );
			};

			xhr.onerror = onError;

			xhr.send();
		}

		function loadFullImage( slide ) {
			var el = slide.el;
			var attrs = slide.attrs;
			var image = el.querySelector( 'img' );

			if ( ! image.hasAttribute( 'data-loaded' ) ) {
				var hasPreview = !! attrs.previewImage;
				var thumbSize = attrs.thumbSize;

				if ( ! hasPreview || ( thumbSize && el.offsetWidth > thumbSize.width ) ) {
					image.src = attrs.src;
				} else {
					image.src = attrs.previewImage;
				}

				image.setAttribute( 'itemprop', 'image' );
				image.setAttribute( 'data-loaded', 1 );
			}
		}

		function loadBackgroundImage( slide ) {
			var currentSlide = slide.el;

			if ( swiper && swiper.slides ) {
				currentSlide = swiper.slides[ swiper.activeIndex ];
			}

			var image = slide.attrs.originalElement;
			var isLoaded = image.complete && image.naturalHeight !== 0;

			if ( isLoaded ) {
				applyBackgroundImage( slide, currentSlide, image );
				return;
			}

			image.onload = function () {
				applyBackgroundImage( slide, currentSlide, image );
			};
		}

		function applyBackgroundImage( slide, currentSlide, image ) {
			var url = util.getBackgroundImage( image );
			slide.backgroundImage = url;
			currentSlide.style.backgroundImage = 'url(' + url + ')';
			currentSlide.style.backgroundSize = 'cover';
		}

		function clearCommentTextAreaValue() {
			if ( carousel.commentField ) {
				carousel.commentField.value = '';
			}
		}

		function getOriginalDimensions( el ) {
			var size = el.getAttribute( 'data-orig-size' ) || '';

			if ( size ) {
				var parts = size.split( ',' );
				return { width: parseInt( parts[ 0 ], 10 ), height: parseInt( parts[ 1 ], 10 ) };
			} else {
				return {
					width:
						el.getAttribute( 'data-original-width' ) || el.getAttribute( 'width' ) || undefined,
					height:
						el.getAttribute( 'data-original-height' ) || el.getAttribute( 'height' ) || undefined,
				};
			}
		}

		function initCarouselSlides( items, startIndex ) {
			carousel.slides = [];

			var max = calculateMaxSlideDimensions();

			// If the startIndex is not 0 then preload the clicked image first.
			if ( startIndex !== 0 ) {
				var img = new Image();
				img.src = items[ startIndex ].getAttribute( 'data-gallery-src' );
			}

			var useInPageThumbnails = !! domUtil.closest( items[ 0 ], '.tiled-gallery.type-rectangular' );

			// create the 'slide'
			Array.prototype.forEach.call( items, function ( item, i ) {
				var permalinkEl = domUtil.closest( item, 'a' );
				var origFile = item.getAttribute( 'data-orig-file' ) || item.getAttribute( 'src-orig' );
				var attrID =
					item.getAttribute( 'data-attachment-id' ) || item.getAttribute( 'data-id' ) || '0';
				var caption = document.querySelector(
					'img[data-attachment-id="' + attrID + '"] + figcaption'
				);

				if ( caption ) {
					caption = caption.innerHTML;
				} else {
					caption = item.getAttribute( 'data-image-caption' );
				}

				var attrs = {
					originalElement: item,
					attachmentId: attrID,
					commentsOpened: item.getAttribute( 'data-comments-opened' ) || '0',
					imageMeta: domUtil.getJSONAttribute( item, 'data-image-meta' ) || {},
					title: item.getAttribute( 'data-image-title' ) || '',
					desc: item.getAttribute( 'data-image-description' ) || '',
					mediumFile: item.getAttribute( 'data-medium-file' ) || '',
					largeFile: item.getAttribute( 'data-large-file' ) || '',
					origFile: origFile || '',
					thumbSize: { width: item.naturalWidth, height: item.naturalHeight },
					caption: caption || '',
					permalink: permalinkEl && permalinkEl.getAttribute( 'href' ),
					src: origFile || item.getAttribute( 'src' ) || '',
				};

				var tiledGalleryItem = domUtil.closest( item, '.tiled-gallery-item' );
				var tiledCaptionEl =
					tiledGalleryItem && tiledGalleryItem.querySelector( '.tiled-gallery-caption' );
				var tiledCaption = tiledCaptionEl && tiledCaptionEl.innerHTML;
				if ( tiledCaption ) {
					attrs.caption = tiledCaption;
				}

				var origDimensions = getOriginalDimensions( item );

				attrs.origWidth = origDimensions.width || attrs.thumbSize.width;
				attrs.origHeight = origDimensions.height || attrs.thumbSize.height;

				if ( typeof wpcom !== 'undefined' && wpcom.carousel && wpcom.carousel.generateImgSrc ) {
					attrs.src = wpcom.carousel.generateImgSrc( item, max );
				} else {
					attrs.src = selectBestImageUrl( {
						origFile: attrs.src,
						origWidth: attrs.origWidth,
						origHeight: attrs.origHeight,
						maxWidth: max.width,
						maxHeight: max.height,
						mediumFile: attrs.mediumFile,
						largeFile: attrs.largeFile,
					} );
				}

				// Set the final src.
				item.setAttribute( 'data-gallery-src', attrs.src );

				if ( attrs.attachmentId !== '0' ) {
					attrs.title = util.texturize( attrs.title );
					attrs.desc = util.texturize( attrs.desc );
					attrs.caption = util.texturize( attrs.caption );

					// Initially, the image is a 1x1 transparent gif.
					// The preview is shown as a background image on the slide itself.
					var image = new Image();
					image.src = attrs.src;

					var slideEl = document.createElement( 'div' );
					slideEl.classList.add( 'swiper-slide' );
					slideEl.setAttribute( 'itemprop', 'associatedMedia' );
					slideEl.setAttribute( 'itemscope', '' );
					slideEl.setAttribute( 'itemtype', 'https://schema.org/ImageObject' );
					var zoomEl = document.createElement( 'div' );
					zoomEl.classList.add( 'swiper-zoom-container' );

					carousel.gallery.appendChild( slideEl );

					slideEl.appendChild( zoomEl );
					zoomEl.appendChild( image );
					slideEl.setAttribute( 'data-attachment-id', attrs.attachmentId );
					slideEl.setAttribute( 'data-permalink', attrs.permalink );
					slideEl.setAttribute( 'data-orig-file', attrs.origFile );

					if ( useInPageThumbnails ) {
						// Use the image already loaded in the gallery as a preview.
						attrs.previewImage = attrs.src;
					}

					var slide = { el: slideEl, attrs: attrs, index: i };
					carousel.slides.push( slide );
				}
			} );
		}

		function loadSwiper( gallery, options ) {
			if ( ! window.Swiper670 ) {
				var loader = document.querySelector( '#jp-carousel-loading-overlay' );
				domUtil.show( loader );
				var jsScript = document.createElement( 'script' );
				jsScript.id = 'jetpack-carousel-swiper-js';
				jsScript.src = window.jetpackSwiperLibraryPath.url;
				jsScript.async = true;
				jsScript.onload = function () {
					domUtil.hide( loader );
					openCarousel( gallery, options );
				};
				jsScript.onerror = function () {
					domUtil.hide( loader );
				};
				document.head.appendChild( jsScript );
				return;
			}
			openCarousel( gallery, options );
		}

		function openCarousel( gallery, options ) {
			var settings = {
				imgSelector:
					'.gallery-item [data-attachment-id], .tiled-gallery-item [data-attachment-id], img[data-attachment-id], img[data-id]',
				startIndex: 0,
			};

			var data = domUtil.getJSONAttribute( gallery, 'data-carousel-extra' );
			var tapTimeout;

			if ( ! data ) {
				return; // don't run if the default gallery functions weren't used
			}

			initializeCarousel();

			if ( carousel.isOpen ) {
				return; // don't open if already opened
			}
			carousel.isOpen = true;

			// make sure to stop the page from scrolling behind the carousel overlay, so we don't trigger
			// infiniscroll for it when enabled (Reader, theme infiniscroll, etc).
			originalOverflow = getComputedStyle( document.body ).overflow;
			document.body.style.overflow = 'hidden';
			// prevent html from overflowing on some of the new themes.
			originalHOverflow = getComputedStyle( document.documentElement ).overflow;
			document.documentElement.style.overflow = 'hidden';
			scrollPos = window.scrollY || window.pageYOffset || 0;

			carousel.container.setAttribute( 'data-carousel-extra', JSON.stringify( data ) );
			stat( [ 'open', 'view_image' ] );

			// If options exist, lets merge them
			// with our default settings
			for ( var option in options || {} ) {
				settings[ option ] = options[ option ];
			}

			if ( settings.startIndex === -1 ) {
				settings.startIndex = 0; // -1 returned if can't find index, so start from beginning
			}

			domUtil.emitEvent( carousel.overlay, 'jp_carousel.beforeOpen' );
			carousel.gallery.innerHTML = '';

			// Need to set the overlay manually to block or swiper does't initialise properly.
			carousel.overlay.style.opacity = 1;
			carousel.overlay.style.display = 'block';

			initCarouselSlides( gallery.querySelectorAll( settings.imgSelector ), settings.startIndex );

			swiper = new window.Swiper670( '.jp-carousel-swiper-container', {
				centeredSlides: true,
				zoom: true,
				loop: carousel.slides.length > 1,
				// Turn off interactions and hide navigation arrows if there is only one slide.
				enabled: carousel.slides.length > 1,
				pagination: {
					el: '.jp-swiper-pagination',
					clickable: true,
				},
				navigation: {
					nextEl: '.jp-swiper-button-next',
					prevEl: '.jp-swiper-button-prev',
				},
				initialSlide: settings.startIndex,
				on: {
					init: function () {
						selectSlideAtIndex( settings.startIndex );
					},
				},
				preventClicks: false,
				preventClicksPropagation: false,
				preventInteractionOnTransition: ! domUtil.isTouch(),
				threshold: 5,
			} );

			swiper.on( 'slideChange', function ( swiper ) {
				var index;
				// Swiper indexes slides from 1, plus when looping to left last slide ends up
				// as 0 and looping to right first slide as total slides + 1. These are adjusted
				// here to match index of carousel.slides.
				if ( swiper.activeIndex === 0 ) {
					index = carousel.slides.length - 1;
				} else if ( swiper.activeIndex === carousel.slides.length + 1 ) {
					index = 0;
				} else {
					index = swiper.activeIndex - 1;
				}
				selectSlideAtIndex( index );

				carousel.overlay.classList.remove( 'jp-carousel-hide-controls' );
			} );

			swiper.on( 'zoomChange', function ( swiper, scale ) {
				if ( scale > 1 ) {
					carousel.overlay.classList.add( 'jp-carousel-hide-controls' );
				}

				if ( scale === 1 ) {
					carousel.overlay.classList.remove( 'jp-carousel-hide-controls' );
				}
			} );

			swiper.on( 'doubleTap', function ( swiper ) {
				clearTimeout( tapTimeout );
				if ( swiper.zoom.scale === 1 ) {
					var zoomTimeout = setTimeout( function () {
						carousel.overlay.classList.remove( 'jp-carousel-hide-controls' );
						clearTimeout( zoomTimeout );
					}, 150 );
				}
			} );

			swiper.on( 'tap', function () {
				if ( swiper.zoom.scale > 1 ) {
					tapTimeout = setTimeout( function () {
						carousel.overlay.classList.toggle( 'jp-carousel-hide-controls' );
					}, 150 );
				}
			} );

			domUtil.fadeIn( carousel.overlay, function () {
				domUtil.emitEvent( carousel.overlay, 'jp_carousel.afterOpen' );
			} );
		}

		// Register the event listener for starting the gallery
		document.body.addEventListener( 'click', function ( e ) {
			var isCompatible =
				window.CSS && window.CSS.supports && window.CSS.supports( 'display', 'grid' );

			// IE11 support is being dropped in August 2021. The new swiper.js libray is not IE11 compat
			// so just default to opening individual image attachment/media pages for IE.
			if ( ! isCompatible ) {
				return;
			}

			var target = e.target;
			var gallery = domUtil.closest( target, gallerySelector );

			if ( gallery ) {
				if ( ! testForData( gallery ) ) {
					return;
				}

				var parent = target.parentElement;
				var grandparent = parent.parentElement;

				// If Gallery is made up of individual Image blocks check for custom link before
				// loading carousel.
				if ( grandparent && grandparent.classList.contains( 'wp-block-image' ) ) {
					var parentHref = parent.getAttribute( 'href' );

					// If the link does not point to the attachment or media file then assume Image has
					// a custom link so don't load the carousel.
					if (
						parentHref.split( '?' )[ 0 ] !==
							target.getAttribute( 'data-orig-file' ).split( '?' )[ 0 ] &&
						parentHref !== target.getAttribute( 'data-permalink' )
					) {
						return;
					}
				}

				// Do not open the modal if we are looking at a gallery caption from before WP5, which may contain a link.
				if ( parent.classList.contains( 'gallery-caption' ) ) {
					return;
				}

				// Do not open the modal if we are looking at a caption of a gallery block, which may contain a link.
				if ( domUtil.matches( parent, 'figcaption' ) ) {
					return;
				}

				// Set height to auto.
				// Fix some themes where closing carousel brings view back to top.
				document.documentElement.style.height = 'auto';

				e.preventDefault();

				// Stopping propagation in case there are parent elements
				// with .gallery or .tiled-gallery class
				e.stopPropagation();

				var item = domUtil.closest( target, itemSelector );
				var index = Array.prototype.indexOf.call( gallery.querySelectorAll( itemSelector ), item );
				loadSwiper( gallery, { startIndex: index } );
			}
		} );

		// Handle lightbox (single image gallery) for images linking to 'Attachment Page'.
		if ( Number( jetpackCarouselStrings.single_image_gallery ) === 1 ) {
			processSingleImageGallery();
			document.body.addEventListener( 'is.post-load', function () {
				processSingleImageGallery();
			} );
		}

		// Makes carousel work on page load and when back button leads to same URL with carousel hash
		// (i.e. no actual document.ready trigger).
		window.addEventListener( 'hashchange', function () {
			var hashRegExp = /jp-carousel-(\d+)/;

			if ( ! window.location.hash || ! hashRegExp.test( window.location.hash ) ) {
				if ( carousel.isOpen ) {
					closeCarousel();
				}

				return;
			}

			if ( window.location.hash === lastKnownLocationHash && carousel.isOpen ) {
				return;
			}

			if ( window.location.hash && carousel.gallery && ! carousel.isOpen && history.back ) {
				history.back();
				return;
			}

			lastKnownLocationHash = window.location.hash;
			var matchList = window.location.hash.match( hashRegExp );
			var attachmentId = parseInt( matchList[ 1 ], 10 );
			var galleries = document.querySelectorAll( gallerySelector );

			// Find the first thumbnail that matches the attachment ID in the location
			// hash, then open the gallery that contains it.
			for ( var i = 0; i < galleries.length; i++ ) {
				var gallery = galleries[ i ];
				var selected;

				var images = gallery.querySelectorAll( 'img' );
				for ( var j = 0; j < images.length; j++ ) {
					if (
						parseInt( images[ j ].getAttribute( 'data-attachment-id' ), 10 ) === attachmentId ||
						parseInt( images[ j ].getAttribute( 'data-id' ), 10 ) === attachmentId
					) {
						selected = j;
						break;
					}
				}

				if ( selected !== undefined ) {
					openOrSelectSlide( gallery, selected );
					break;
				}
			}
		} );

		if ( window.location.hash ) {
			domUtil.emitEvent( window, 'hashchange' );
		}
	}

	if ( document.readyState !== 'loading' ) {
		init();
	} else {
		document.addEventListener( 'DOMContentLoaded', init );
	}
} )();
;
( function () {
	window.addEventListener( 'load', function () {
		var notificationElement = document.querySelector( '.jetpack-sub-notification' );
		if ( notificationElement ) {
			notificationElement.scrollIntoView();
		}
	} );
} )();
;
/*global google:true*/
/*global _wp_google_translate_widget:true*/
/*exported googleTranslateElementInit*/
function googleTranslateElementInit() {
	var lang = 'en';
	var langParam;
	var langRegex = /[?&#]lang=([a-zA-Z\-_]+)/;
	if (
		typeof _wp_google_translate_widget === 'object' &&
		typeof _wp_google_translate_widget.lang === 'string'
	) {
		lang = _wp_google_translate_widget.lang;
	}
	langParam = window.location.href.match( langRegex );
	if ( langParam ) {
		window.location.href =
			window.location.href.replace( langRegex, '' ).replace( /#googtrans\([a-zA-Z\-_|]+\)/, '' ) +
			'#googtrans(' +
			lang +
			'|' +
			langParam[ 1 ] +
			')';
	}
	new google.translate.TranslateElement(
		{
			pageLanguage: lang,
			layout: _wp_google_translate_widget.layout,
			autoDisplay: false,
		},
		'google_translate_element'
	);
}
;
